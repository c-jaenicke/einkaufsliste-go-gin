// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/c-jaenicke/einkaufsliste-go-gin/ent/category"
	"github.com/c-jaenicke/einkaufsliste-go-gin/ent/item"
	"github.com/c-jaenicke/einkaufsliste-go-gin/ent/schema"
	"github.com/c-jaenicke/einkaufsliste-go-gin/ent/store"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	categoryFields := schema.Category{}.Fields()
	_ = categoryFields
	// categoryDescName is the schema descriptor for name field.
	categoryDescName := categoryFields[0].Descriptor()
	// category.NameValidator is a validator for the "name" field. It is called by the builders before save.
	category.NameValidator = categoryDescName.Validators[0].(func(string) error)
	// categoryDescColor is the schema descriptor for color field.
	categoryDescColor := categoryFields[1].Descriptor()
	// category.ColorValidator is a validator for the "color" field. It is called by the builders before save.
	category.ColorValidator = categoryDescColor.Validators[0].(func(string) error)
	itemFields := schema.Item{}.Fields()
	_ = itemFields
	// itemDescName is the schema descriptor for name field.
	itemDescName := itemFields[0].Descriptor()
	// item.NameValidator is a validator for the "name" field. It is called by the builders before save.
	item.NameValidator = itemDescName.Validators[0].(func(string) error)
	// itemDescAmount is the schema descriptor for amount field.
	itemDescAmount := itemFields[2].Descriptor()
	// item.AmountValidator is a validator for the "amount" field. It is called by the builders before save.
	item.AmountValidator = itemDescAmount.Validators[0].(func(int) error)
	// itemDescStatus is the schema descriptor for status field.
	itemDescStatus := itemFields[3].Descriptor()
	// item.DefaultStatus holds the default value on creation for the status field.
	item.DefaultStatus = itemDescStatus.Default.(string)
	// item.StatusValidator is a validator for the "status" field. It is called by the builders before save.
	item.StatusValidator = itemDescStatus.Validators[0].(func(string) error)
	storeFields := schema.Store{}.Fields()
	_ = storeFields
	// storeDescName is the schema descriptor for name field.
	storeDescName := storeFields[0].Descriptor()
	// store.NameValidator is a validator for the "name" field. It is called by the builders before save.
	store.NameValidator = storeDescName.Validators[0].(func(string) error)
}
